##
## Stage 0 - Build the GridTools for Python (GT4Py) interface 
##

FROM nvidia/cuda:10.1-devel-ubuntu18.04 AS fv3gfs-gt4py

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y git libssl-dev python3 python3-pip libpython3-dev && \
    pip3 install --no-cache-dir scikit-build matplotlib cython && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10

#RUN git clone -b v8.0.0b3 --depth 1 https://github.com/cupy/cupy.git && \
#    cd cupy && pip3 install . && \
#    cd / 

RUN git clone --depth 1 -b fv3_validation https://github.com/eddie-c-davis/gt4py.git /usr/src/gt4py && \
    pip install --no-cache-dir -e /usr/src/gt4py[cuda101] && \
    cd /usr/src/gt4py && python -m gt4py.gt_src_manager install

##
## Stage 1 - Build the DAWN compiler
##

FROM nvidia/cuda:10.1-devel-ubuntu18.04 AS fv3gfs-dawn

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y git wget libssl-dev llvm-9-dev libclang-9-dev python3 python3-pip libpython3-dev && \
    pip3 install --no-cache-dir scikit-build matplotlib cython && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10

RUN cd /usr/local && \
    wget https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.tar.gz && \
    tar xzf boost_1_73_0.tar.gz && rm boost_1_73_0.tar.gz && \
    cd boost_1_73_0 && cp -r boost /usr/include/

RUN mkdir /myapps && cd /myapps && \
    wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz && \
    tar xzf cmake-3.17.3.tar.gz && rm cmake-3.17.3.tar.gz && \
    cd cmake-3.17.3 && \
    ./bootstrap -- -DCMAKE_BUILD_TYPE:STRING=Release && make -j4 && make install 

RUN git clone https://github.com/MeteoSwiss-APN/dawn.git /usr/src/dawn && \
    pip install --no-cache-dir /usr/src/dawn/dawn

##
## Stage 3 - Build the python wrapper to FV3
##

FROM fv3gfs-fortran-build:latest AS fv3gfs-python

COPY fv3gfs-python.tar /fv3gfs-python/
COPY --from=fv3gfs-dawn /usr/src/dawn/ /usr/src/dawn/
COPY --from=fv3gfs-dawn /myapps/cmake-3.17.3/ /myapps/cmake-3.17.3/
COPY --from=fv3gfs-gt4py /usr/src/gt4py /usr/src/gt4py

ENV FV3CONFIG_CACHE_DIR=/inputdata NCEPLIBS_DIR=/myapps/ncep NETCDF_DIR=/usr \
    FMS_DIR=/myapps/fms FMS_LIB=/myapps/fms/lib \ 
    ESMF_DIR=/myapps/esmf ESMF_INC="-I/myapps/esmf/include" ESMF_LIB=/myapps/esmf/lib \
    LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${ESMF_LIB}:${FMS_LIB}:/myapps/cmake-3.17.3/lib:/usr/lib \
    PATH=/myapps/cmake-3.17.3/bin:${PATH}

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        python3-dev \
        python3-setuptools \
        python3-pytest \
        python3-numpy-dbg \
        nano curl netcdf-bin && \
    pip3 install --no-cache-dir gsutil dataclasses \
        jinja2==2.10.3 \
        xarray==0.13.0 \
        netcdf4==1.4.2 \
        f90nml==1.1.2 \
        requests==2.22.0 \
        pytest==5.2.2 \
        appdirs==1.4.3 \
        pyyaml==5.1.2 \
        google-cloud-storage==1.23.0 \
        gcsfs==0.6.0 \
        fsspec==0.6.0 \
        kubernetes==10.0.1 \
        numcodecs==0.6.4 \
        zarr==2.3.2 \
        h5py==2.10.0 \
        h5netcdf==0.8.0 \
        pytest-subtests==0.3.0 \
        dask==2.10.1 \
        toolz==0.10.0 \
        scipy==1.3.1 \
        sphinx==2.2.0 \
        sphinx_rtd_theme \
        backoff==1.10 \
        jinja2==2.10.3 \
        xarray==0.13.0 \
        netcdf4==1.4.2 \
        f90nml==1.1.2 \
        requests==2.22.0 \
        pytest==5.2.2 && \
    ln -s /bin/python3 /bin/python && \
    ln -s /bin/pip3 /bin/pip

ARG FV3GFS_BUILD_ROOT=/fv3gfs-fortran

RUN cp /myapps/fms/lib/*.so* /lib64/ && \
    cp /myapps/esmf/lib/*.so* /lib64/ && \
    cd /fv3gfs-python && tar xf fv3gfs-python.tar && \
    cp lib/external/FV3/conf/configure.fv3.linux_gnu lib/external/FV3/conf/configure.fv3 && \
    cd lib && make -j8 && \
    mkdir -p /opt/NCEPlibs/lib && \
    cd /myapps/ncep/lib && cp *.a /opt/NCEPlibs/lib/ && \
    export MPI="mpich" && \
    cd /fv3gfs-python && make build

RUN pip3 wheel /usr/src/dawn/dawn && \
    cd / && cp dawn*.whl /usr/src/dawn/ && \
    pip3 install --no-cache-dir /usr/src/dawn/dawn4py-*-linux_x86_64.whl /usr/src/gt4py && \
    pip3 install --no-cache-dir -e /fv3gfs-python/external/fv3config \
                                -e /fv3gfs-python/external/fv3util && \ 
    pip3 install --no-cache-dir -e /fv3gfs-python && \
    pip3 install --no-cache-dir pytest-subtests  

RUN wget http://storage.googleapis.com/vcm-ml-public/2019-10-23-data-for-running-fv3gfs.tar.gz && \
    tar -xf /2019-10-23-data-for-running-fv3gfs.tar.gz --directory / && \
    mv /2019-10-23-data-for-running-fv3gfs /fv3config-cache && \
    mkdir -p $FV3CONFIG_CACHE_DIR/fv3config-cache/gs/vcm-fv3config && \
    gsutil -m cp -r gs://vcm-fv3config/ $FV3CONFIG_CACHE_DIR/fv3config-cache/gs && \
    rm -rf /fv3config-cache/gs/vcm-fv3config/data/base_forcing/v1.0 \
        /fv3config-cache/gs/vcm-fv3config/data/orographic_data/v1.0/C384 \
        /fv3config-cache/gs/vcm-fv3config/data/orographic_data/v1.0/C96 \
        /fv3config-cache/orographic_data/C384 \
        /fv3config-cache/base_forcing

RUN chmod -R 777 $FV3CONFIG_CACHE_DIR && \
    echo "ulimit -s unlimited" >> /etc/bash.bashrc && \
    mkdir /outdir && \
    chmod -R 777 /outdir

CMD ["bash"]
